/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package accesodom;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.TransformerException;
import org.xml.sax.SAXException;

/**
 *
 * @author Angel Valera y Pablo Pardo
 */
public class Ficheros extends javax.swing.JPanel {
    public GestionarDOM gesDOM = new GestionarDOM();
    public GestionarTXT gesTXT = new GestionarTXT();
    public gestionarJSON gesJSON = new gestionarJSON();
    public GestionarBIN gesBIN = new GestionarBIN();
    public int tipoArchivo = 0;
    public int nuevoArchivo = 0;


    /**
     * Creates new form Ficheros
     */
    public Ficheros() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonGUARDAXML = new javax.swing.JButton();
        jButtonMostrarJSON = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaDOM = new javax.swing.JTextArea();
        jPanelDatos = new javax.swing.JPanel();
        jButtonAnyadir = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldTelefono = new javax.swing.JTextField();
        jTextFieldNacido = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldNombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldCorreo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabelmensaje = new javax.swing.JLabel();
        jButtonGUARDAXML1 = new javax.swing.JButton();
        jButtonMostrarJSON1 = new javax.swing.JButton();

        jButtonGUARDAXML.setText("Guardar archivo salida");
        jButtonGUARDAXML.setEnabled(false);
        jButtonGUARDAXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGUARDAXMLActionPerformed(evt);
            }
        });

        jButtonMostrarJSON.setText("Mostrar");
        jButtonMostrarJSON.setEnabled(false);
        jButtonMostrarJSON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMostrarJSONActionPerformed(evt);
            }
        });

        jTextAreaDOM.setColumns(20);
        jTextAreaDOM.setRows(5);
        jTextAreaDOM.setEnabled(false);
        jScrollPane1.setViewportView(jTextAreaDOM);

        jPanelDatos.setEnabled(false);

        jButtonAnyadir.setText("Añadir");
        jButtonAnyadir.setEnabled(false);
        jButtonAnyadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnyadirActionPerformed(evt);
            }
        });

        jLabel5.setText("Teléfono");
        jLabel5.setEnabled(false);

        jTextFieldTelefono.setEnabled(false);

        jTextFieldNacido.setEnabled(false);

        jLabel6.setText("Nacido en");
        jLabel6.setEnabled(false);

        jTextFieldNombre.setColumns(10);
        jTextFieldNombre.setEnabled(false);

        jLabel4.setText("Nombre");
        jLabel4.setEnabled(false);

        jTextFieldCorreo.setEnabled(false);

        jLabel1.setText("Correo");
        jLabel1.setEnabled(false);

        javax.swing.GroupLayout jPanelDatosLayout = new javax.swing.GroupLayout(jPanelDatos);
        jPanelDatos.setLayout(jPanelDatosLayout);
        jPanelDatosLayout.setHorizontalGroup(
            jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosLayout.createSequentialGroup()
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel4))
                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonAnyadir)
                            .addGroup(jPanelDatosLayout.createSequentialGroup()
                                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel1))
                                .addGap(19, 19, 19)
                                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldNacido, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelDatosLayout.setVerticalGroup(
            jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextFieldNacido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonAnyadir)
                .addGap(16, 16, 16))
        );

        jLabelmensaje.setBackground(new java.awt.Color(255, 255, 153));
        jLabelmensaje.setText("<Fichero no seleccionado>");

        jButtonGUARDAXML1.setText("Guardar archivo salida");
        jButtonGUARDAXML1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGUARDAXML1ActionPerformed(evt);
            }
        });

        jButtonMostrarJSON1.setText("Mostrar");
        jButtonMostrarJSON1.setEnabled(false);
        jButtonMostrarJSON1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMostrarJSON1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelmensaje, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonGUARDAXML1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonMostrarJSON1)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabelmensaje)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonMostrarJSON1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanelDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonGUARDAXML1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
    *
    * Función para añadir datos a nuestra agenda:
    * 
    */
    private void jButtonAnyadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnyadirActionPerformed
    
        String salida = null;

        if ((this.jTextFieldNombre.getText().equals("")) || (this.jTextFieldTelefono.getText().equals(""))) {
            this.jLabelmensaje.setText("Error al añadir registro. Nombre y Teléfono obligatorios.");
        } else {
            persona p1 = new persona(this.jTextFieldNombre.getText(), this.jTextFieldTelefono.getText(), this.jTextFieldCorreo.getText(), this.jTextFieldNacido.getText());

            switch (tipoArchivo) {
                case 1:
                if (gesDOM.anyadirDatosXML(p1)) {

                    salida = gesDOM.getContenidoXML();

                    this.jTextAreaDOM.setText(salida);
                    // this.jTextAreaDOM.setText(salida);

                }
                break;
                case 2:

                if (gesJSON.anyadirDatosJSON(p1)) {

                    salida = gesJSON.getContenidoJSON();
                    System.out.println(salida);
                    this.jTextAreaDOM.setText(salida);
                    // this.jTextAreaDOM.setText(salida);

                }
                break;
                case 3:
                if (gesTXT.anyadirTXT(p1)) {

                    salida = gesTXT.getContenidoTXT();
                    System.out.println(salida);
                    this.jTextAreaDOM.setText(salida);
                    // this.jTextAreaDOM.setText(salida);

                }

                break;
                case 4:
                if (gesBIN.anyadirDatosBIN(p1)) {

                    salida = gesBIN.getContenidoBIN();
                    System.out.println(salida);
                    this.jTextAreaDOM.setText(salida);
                    // this.jTextAreaDOM.setText(salida);

                }
                break;

            }

            if (nuevoArchivo != 0) {
                this.getjButtonGUARDAXML().setEnabled(true);
            }
            nuevoArchivo = 0;
            this.jTextAreaDOM.setEnabled(true);
            this.getjButtonGUARDAXML().setEnabled(true);
        }
    }//GEN-LAST:event_jButtonAnyadirActionPerformed

    /**
    *
    * Función para guardar los datos de nuestra agenda a un fichero:
    * 
    */
    private void jButtonGUARDAXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGUARDAXMLActionPerformed

        switch (tipoArchivo) {
            case 1:
            {
                try {
                    if (gesDOM.guardarXML() == false) {
                        this.jLabelmensaje.setText("Error al guardar a fichero");
                        System.out.println("Error al guardar a fichero");
                    } else {
                        this.jLabelmensaje.setText("¡Ya se ha creado el fichero!");
                        System.out.println("¡Ya se ha creado el fichero!");
                    }
                } catch (ParserConfigurationException | TransformerException ex) {
                    Logger.getLogger(Ficheros.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            break;
            case 2:
            try {
                if (gesJSON.guardarJSON() == false) {
                    this.jLabelmensaje.setText("Error al guardar a fichero");
                    System.out.println("Error al guardar a fichero");
                } else {
                    this.jLabelmensaje.setText("¡Ya se ha creado el fichero!");
                    System.out.println("¡Ya se ha creado el fichero!");
                }
            } catch (IOException ex) {
                Logger.getLogger(Ficheros.class.getName()).log(Level.SEVERE, null, ex);
            }
            break;
            case 3:
            try {
                if (gesTXT.guardarTXT() == false) {
                    this.jLabelmensaje.setText("Error al guardar a fichero");
                    System.out.println("Error al guardar a fichero");
                } else {
                    this.jLabelmensaje.setText("¡Ya se ha creado el fichero!");
                    System.out.println("¡Ya se ha creado el fichero!");
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Ficheros.class.getName()).log(Level.SEVERE, null, ex);
            }
            break;
            case 4:
            try {
                if (gesBIN.guardarBIN() == false) {
                    this.jLabelmensaje.setText("Error al guardar a fichero");
                    System.out.println("Error al guardar a fichero");
                } else {
                    this.jLabelmensaje.setText("¡Ya se ha creado el fichero!");
                    System.out.println("¡Ya se ha creado el fichero!");
                }
            } catch (IOException ex) {
                Logger.getLogger(Ficheros.class.getName()).log(Level.SEVERE, null, ex);
            }
            break;
        }
    }//GEN-LAST:event_jButtonGUARDAXMLActionPerformed
    
    /**
    *
    * Función para mostrar los datos de nuestra agenda en el programa:
    * 
    */
    private void jButtonMostrarJSONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMostrarJSONActionPerformed

        String salida = "";

        switch (tipoArchivo) {
            case 1:
            {
                try {
                    salida = gesDOM.recorrerArbol();
                } catch (SAXException | ParserConfigurationException | IOException ex) {
                    Logger.getLogger(Ficheros.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            this.jTextAreaDOM.setText(salida);
            break;
            case 2:
            try {
                gesJSON.leerJSON();
                salida = gesJSON.recorrerJSONyMostrar();
            } catch (IOException ex) {
                Logger.getLogger(Ficheros.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.jTextAreaDOM.setText(salida);
            break;
            case 3:
            try {
                salida = gesTXT.recorrerTXTyMostrar();
            } catch (IOException ex) {
                Logger.getLogger(Ficheros.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.jTextAreaDOM.setText(salida);
            break;
            case 4:
            try {
                salida = gesBIN.recorrerBINyMostrar();
            } catch (IOException ex) {
                Logger.getLogger(Ficheros.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.jTextAreaDOM.setText(salida);
            break;
        }
        this.jTextAreaDOM.setEnabled(true);

        this.getjButtonGUARDAXML().setEnabled(true);
        ActivarCampos();
        this.jButtonJSON().setEnabled(false);
    }//GEN-LAST:event_jButtonMostrarJSONActionPerformed

    /**
    *
    * Función para añadir datos a nuestra agenda:
    * 
    */
    private void jButtonGUARDAXML1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGUARDAXML1ActionPerformed

        switch (tipoArchivo) {
            case 1:
            {
                try {
                    if (gesDOM.guardarXML() == false) {
                        this.jLabelmensaje.setText("Error al guardar a fichero");
                        System.out.println("Error al guardar a fichero");
                    } else {
                        this.jLabelmensaje.setText("¡Ya se ha creado el fichero!");
                        System.out.println("¡Ya se ha creado el fichero!");
                    }
                } catch (ParserConfigurationException | TransformerException ex) {
                    Logger.getLogger(Ficheros.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            break;
            case 2:
            try {
                if (gesJSON.guardarJSON() == false) {
                    this.jLabelmensaje.setText("Error al guardar a fichero");
                    System.out.println("Error al guardar a fichero");
                } else {
                    this.jLabelmensaje.setText("¡Ya se ha creado el fichero!");
                    System.out.println("¡Ya se ha creado el fichero!");
                }
            } catch (IOException ex) {
                Logger.getLogger(Ficheros.class.getName()).log(Level.SEVERE, null, ex);
            }
            break;
            case 3:
            try {
                if (gesTXT.guardarTXT() == false) {
                    this.jLabelmensaje.setText("Error al guardar a fichero");
                    System.out.println("Error al guardar a fichero");
                } else {
                    this.jLabelmensaje.setText("¡Ya se ha creado el fichero!");
                    System.out.println("¡Ya se ha creado el fichero!");
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Ficheros.class.getName()).log(Level.SEVERE, null, ex);
            }
            break;
            case 4:
            try {
                if (gesBIN.guardarBIN() == false) {
                    this.jLabelmensaje.setText("Error al guardar a fichero");
                    System.out.println("Error al guardar a fichero");
                } else {
                    this.jLabelmensaje.setText("¡Ya se ha creado el fichero!");
                    System.out.println("¡Ya se ha creado el fichero!");
                }
            } catch (IOException ex) {
                Logger.getLogger(Ficheros.class.getName()).log(Level.SEVERE, null, ex);
            }
            break;
        }
    }//GEN-LAST:event_jButtonGUARDAXML1ActionPerformed
    
    /**
    *
    * Función para mostrar los datos de nuestra agenda en el programa:
    * 
    */
    private void jButtonMostrarJSON1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMostrarJSON1ActionPerformed

        String salida = "";

        switch (tipoArchivo) {
            case 1:
            {
                try {
                    salida = gesDOM.recorrerArbol();
                } catch (SAXException | ParserConfigurationException | IOException ex) {
                    Logger.getLogger(Ficheros.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            this.jTextAreaDOM.setText(salida);
            break;
            case 2:
            try {
                gesJSON.leerJSON();
                salida = gesJSON.recorrerJSONyMostrar();
            } catch (IOException ex) {
                Logger.getLogger(Ficheros.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.jTextAreaDOM.setText(salida);
            break;
            case 3:
            try {
                salida = gesTXT.recorrerTXTyMostrar();
            } catch (IOException ex) {
                Logger.getLogger(Ficheros.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.jTextAreaDOM.setText(salida);
            break;
            case 4:
            try {
                salida = gesBIN.recorrerBINyMostrar();
            } catch (IOException ex) {
                Logger.getLogger(Ficheros.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.jTextAreaDOM.setText(salida);
            break;
        }
        this.jTextAreaDOM.setEnabled(true);

        ActivarCampos();
        ActivarCampos();
        this.jButtonJSON().setEnabled(false);
        
        
    }//GEN-LAST:event_jButtonMostrarJSON1ActionPerformed

    /**
    *
    * Función para activar los campos de introducción de datos en nuestra agenda:
    * 
    */
    public void ActivarCampos() {

        this.jTextFieldNombre.setEnabled(true);
        this.jTextFieldTelefono.setEnabled(true);
        this.jTextFieldCorreo.setEnabled(true);
        this.jTextFieldNacido.setEnabled(true);
        this.getjButtonAnyadir().setEnabled(true);
        this.jLabel1.setEnabled(true);
        this.jLabel4.setEnabled(true);
        this.jLabel5.setEnabled(true);
        this.jLabel6.setEnabled(true);
    }

/**
    *
    * Función para seleccionar fichero a través de un cuadro de diálogo:
    * 
    * @return fichero (File). Fichero seleccionado.
    */
    public File dialogoSeleccionTipoRecurso() {
        File fichero = null;
        int rv;
        JFileChooser fc = new JFileChooser();
        fc.setMultiSelectionEnabled(false);
        fc.setDialogType(JFileChooser.OPEN_DIALOG);
        rv = fc.showOpenDialog(this);
        if (rv == JFileChooser.APPROVE_OPTION) {
            fichero = fc.getSelectedFile();
        }
        return fichero;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton jButtonAnyadir;
    private javax.swing.JButton jButtonGUARDAXML;
    public static javax.swing.JButton jButtonGUARDAXML1;
    private javax.swing.JButton jButtonMostrarJSON;
    public static javax.swing.JButton jButtonMostrarJSON1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelmensaje;
    private javax.swing.JPanel jPanelDatos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaDOM;
    private javax.swing.JTextField jTextFieldCorreo;
    private javax.swing.JTextField jTextFieldNacido;
    private javax.swing.JTextField jTextFieldNombre;
    private javax.swing.JTextField jTextFieldTelefono;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the jButtonAnyadir
     */
    public javax.swing.JButton getjButtonAnyadir() {
        return jButtonAnyadir;
    }

    /**
     * @return the jButtonGUARDAXML
     */
    public javax.swing.JButton getjButtonGUARDAXML() {
        return jButtonGUARDAXML;
    }

    /**
     * @return the jButtonGUARDAXML1
     */
    public javax.swing.JButton getjButtonGUARDAXML1() {
        return jButtonGUARDAXML1;
    }



    /**
     * @param jButtonGUARDAXML the jButtonGUARDAXML to set
     */
    public void setjButtonGUARDAXML(javax.swing.JButton jButtonGUARDAXML) {
        this.jButtonGUARDAXML = jButtonGUARDAXML;
    }

    /**
     * @param jButtonMostrarJSON the jButtonMostrarJSON to set
     */
    public void setjButtonMostrarJSON(javax.swing.JButton jButtonMostrarJSON) {
        this.jButtonMostrarJSON = jButtonMostrarJSON;
    }
     /**
     * @param jTextAreaDOM the jTextAreaDOM to set
     */
    public void setjTextAreaDOM(javax.swing.JTextArea jTextAreaDOM) {
        this.jTextAreaDOM = jTextAreaDOM;
    }
    public javax.swing.JTextArea getjTextAreaDOM() {
        return jTextAreaDOM;
    }
    public javax.swing.JButton jButtonGUARDAXML() {
        return jButtonGUARDAXML;
    }
     public javax.swing.JButton jButtonJSON() {
        return jButtonMostrarJSON1;
    }
    
     public javax.swing.JLabel jLabelmensaje() {
        return jLabelmensaje;
    }
     public javax.swing.JPanel jPanelDatos() {
        return jPanelDatos;
    }
     
     
}
